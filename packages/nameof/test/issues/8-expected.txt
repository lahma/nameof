import CodeBlockWriter from "code-block-writer";
import { expect } from "chai";
import { FunctionDefinition, InterfaceMethodDefinition, ClassMethodDefinition } from "./../../definitions";
import { FunctionBodyWriter } from "./../../writers";
import { WriteFlags } from "./../../WriteFlags";
import * as mocks from "./mocks";

suite(
    "FunctionBodyWriter",
    () =>
    {
        function createObjects()
        {
            const writer = new CodeBlockWriter();
            const defWriter = new FunctionBodyWriter(writer);
            return { writer, defWriter };
        }

        suite(
            "write",
            () =>
            {

                test(
                    `should not write out the function body if ${"HideFunctionBodies"} is set`,
                    () =>
                    {
                        const def = new FunctionDefinition();
                        const { writer, defWriter } = createObjects();
                        defWriter.write(def, WriteFlags.HideFunctionBodies);
                        expect(writer.toString()).to.equal(";");
                    });

                test(
                    `should not write out the function body if it's an ${"InterfaceMethodDefinition"}`,
                    () =>
                    {
                        const def = new InterfaceMethodDefinition();
                        const { writer, defWriter } = createObjects();
                        defWriter.write(def, WriteFlags.None);
                        expect(writer.toString()).to.equal(";");
                    });
            });
    });
